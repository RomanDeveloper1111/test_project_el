version: "3.7"

services:

  db:
    image: postgres:13
    env_file: .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - 5432:5432

  django:
    build:
      context: ./test_project
      dockerfile: Dockerfile
    image: test_project-django:dev
    env_file:
      - .env
    command: bash -c "
      python manage.py migrate
      && python manage.py runserver 0.0.0.0:8000"
    depends_on:
      - db
    ports:
      - 8000:8000
    volumes:
      - ./test_project:/usr/src/app/

#  react:
#    build:
#      context: ./test_project
#      dockerfile: DockerFile_React
#    restart: unless-stopped
#    env_file: .env
#    stdin_open: true
#    environment:
#      CI:
#      BROWSER:
#      HOST: 0.0.0.0
#    command: npm start
#    ports:
#      - 3000:3000
#    volumes:
#      - ./front:/app
#      - ./front/node_modules:/app/node_modules

  redis:
    image: redis:6.2-alpine
    ports:
      - '6379:6379'
    hostname: redis
    volumes:
      - redis_data:/data

  celery:
    build:
      context: ./test_project
    entrypoint: celery
    command: --app test_project.celery worker --beat --loglevel=info -c 1 -S redbeat.RedBeatScheduler
    environment:
      DJANGO_SETTINGS_MODULE: test_project.settings.settings
    env_file:
      - .env
    volumes:
      - ./test_project:/usr/src/app/
    depends_on:
      - redis
      - db



  mailcatcher:
    image: dockage/mailcatcher:0.7.1
    ports:
      - 1080:1080
      - 1025:1025

volumes:
  postgres_data:
  redis_data:




